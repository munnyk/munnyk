#define _CRT_SECURE_NO_WARNINGS 1	
#include<stdio.h>
#include<stdlib.h>

//0.问题目录：
//1.无法打开监视
//2.第10处无法引用函数
//3.第13无法引用外部函数
// 
//



//1.打印

//int main()
//{
//	printf("hello world\n");
//	printf("hello world\n");
//	printf("hello world\n");
//	char ch = 'a';
//	printf("%c\n", ch);
//	int age = 20;
//	printf("%d\n", age);
//	float ccc = 5;
//	printf("%f\n", ccc);
//
//	double d = 5;
//	printf("%lf\n", d);
//
//	printf("%d\n", sizeof(int));
//	printf("%d\n", sizeof(int));
//	float weight = 89.9f;
//	printf("%f\n", weight);
//	return 0;
//
//}

//2，取地址

//
//
//int main()
//{
//	int num1=0;
//	int num2 = 0; 
//	
//	scanf("%d%d", &num1, &num2);  //取地址，需要两个变量存取值
//	int sum = 0;
//		sum = num1 + num2;
//	printf("s=%d\n", sum);
//
//
//
//
//	return 0;
//}




//3.全局变量与局部变量


//int global = 2022;
//void test()
//{
//	extern int s;      //声明外部变量
//	printf("text()--=%d\n", global);
//	printf("text()--=%d\n", s);
//
//
//	return 0;
//
//}
//
//
//int main()
//{
//	test();
//	int num = 0;
//	{
//		/*{int num = 0; }*/
//		/*int num = 0;*/
//		printf("num=%d\n", global);
//		return 0;
//
//
//
//
//
//	}
//}
//4.变量和常量

//int main()
//{
//	//const int n = 5;
//	//int arr[10] = { 0 };
//	//int arr[n] = { 0 };    //n此时为常变量
//	const  int num4 = 8;
//	/*int num4 = 4;*/
//	printf("%d\n", num4);
//	/*num4 = 7;*/
//	printf("%d", num4);
//
//
//
//	return 0;
//}
//#define MAX 10
//int main()
//{
//
//	int arr[MAX] = {0};
//
//printf("%d\n", MAX);
//
//
//	return 0;
//	}

//int main()
//{
//	enum Sex     //枚举函数
//	{
//
//
//		male,female
//};
//	enum Sex s = male;
//	printf("%d", male);
//	enum color
//	{red,
//	yellow,
//	blue};
//
//	enum color c = blue;
//	printf("%d", c);
//
//	return 0;
//}

//5.字符串
//int main()
//{
//	char arr1[
//	] = "abc""asd";
//	char arr2[
//	] = { 'a','b','c',0 };
//	printf("%s\n", arr1);
//	printf("%s\n", arr2);
//
//	char arr9[
//	] = { 'a','b','c','0'};
//	char arr0[
//	] = { 'a','b','c','\0' };
//	printf("%s\n", arr9);
//	printf("%s\n", arr0);
//	
//		char arr10[
//	] = "abc""asd";
//	char arr12[
//	] = { 'a','b','c',0 };
//	
//	//
//	//
//	//printf("%s\n",strlen( arr10));     //错误strlen没有定义
//	//printf("%s\n", strlen(arr12));
//	//
//
//
//	return 0;
//}


//6.转义字符
// 
//int main()
//{
//	printf("abc");
//	printf("abc\n");
//	printf("c:\t\88\n");      //  \t  水平制表符
//	printf("c:\\t\88\n");
//	printf("(are you ok?)");
//	printf("(are you ok??)\n");
//	printf("%c\n", 'a');
//	printf("%c\n", '\'');
//	printf("%c\n", '\x62');    // \x62 表示b
//	printf("%s\n","\"a");
//
//	//printf("%d\n", strlen("c:\test\32\test.c");   //长度为13
// //
// //
//
//	return 0;
//}
//7.注释

//8.选择

//int main()
//{
//	int input = 0;
//	printf("加入比特\n"); 
//	printf("你要好好学习吗？（1/0）>:");
//	scanf("%d", &input);
//	if (input == 1)
//		printf("好offer\n");
//	else
//		printf("卖红薯\n");
//
//	return 0;
//}

//9.循环语句
//
//int main()
//{
//	int line = 0;
//	printf("加入比特\n");
//		while (line <= 20000) 
//		{
//			printf(" 敲一行代码%d\n",line);
//				line++;
//		}
//		if( line>=20000)
//	printf("好offer");
//
//	return 0;
//}

//10.函数   //不知道为什么不行

//int Add(int x, int y)
//{
//	int z = x + y;
//	return z;
//}
//
//
//int mian() 
//
//
//{
//	int sum = 0;
//	int a = 78;
//	int b = 777;
//	int c = 56; 
//	sum = Add(a, b);
//	printf(" %d\n",sum);
//	return 0;
//}


//11.数组

//int main()
//{
//	int a = 1;
//	int b = 2;
//
//	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };//下标：0123456789，e:5下标为4
//	   /* char arr
//		float arr
//		......
//		*/
//
//	printf("%d\n", arr[4]);
//	int i = 0;
//	while (i < 10) {
//		printf("%d\n", arr[i]);
//		i++;
//	}
//
//	return 0;
//}

//12.操作符

//int main()
//{
//
//	//a.算术操作符
//	int a = 5 / 2;
//	int a1 = 5 % 2;
//	printf("d\n", a);
//	printf("d\n", a1);
//
//	//b.移位操作符
//	int w = 1;
//	//000000000000000000000000000001
//	int e=w << 1;
//	printf("%d\n", e);
//	printf("%d\n", w);
//
//	//c.位操作符
//	//&按位与
//	//|按位或
//	//*按位异或
//
//	int y = 3;
//	int x = 5;
//	int z= x & y;
//
//	//011
//	//101
//	//结果001
//	printf("%d\n", z);
//	int b = x | y;
//	//011
//	//101
//	//111
//	printf("%d\n", b);
//	int j = x ^ y;
//	//二进制相同为0
//	//不同为1
//	//011
//	//101
//	//110
//	printf("%d\n", j);
//
//
//	//d.赋值操作符
// 
//	int r = 0;
//	//r = r + 10;//相同于r+=10;
//	//r = r & 2;
//	//r &= 2;
//	
//  //单目操作符，双目操作符
// 
//	int o = 10;
//	int p = 20;
//	//o+p  
//
//	printf("%d\n", o);
//	printf("%d\n", !o); //  ！真变成假，假变成真
//
//	printf("%d\n",r );
//	printf("%d\n", !r);
//
//	//
//	
//	int arr[10] = { 0 };
//	printf("%d\n", sizeof(arr));
//
//	return 0;
//}
//13.作业及复习1
//int main()
//{
//	int a = 0;
//	int b = 0;
//	scanf("%d%d", &a, &b);
//	if (a > b)
//		printf("较大值是：%d", a);
//	else
//		printf("较大值是：%d", b);
//
//
//
//
//	return 0;
//}

// int Max(int a, int b) {
//	 if (a > b)
//		 return a;
//	 else
//		 return b  ;
//
//
//}
//
//
//int main()
//{
//	int a = 44;
//	int b = 6;
//	int Max = 0;
//	Max = Max(a, b);
//	printf("%d", Max);
//
//
//
//	return 0;
//}
//

//14.操作符2
//int main()
//{
//	int a = 10;
//		int arr[] = { 1,2,3,4,5,6 };
//		printf("%d\n", sizeof(a)); //4
//		printf("%d\n", sizeof(int)); //4
//		printf("%d\n", sizeof a);  //说明sizeof是操作符 
//		printf("%d\n", sizeof (arr));//计算数组大小，单位bit 字节
//		//printf("%d\n", sizeof int);//这样写不行
//		printf("%d\n", sizeof(arr)/sizeof(arr[0]));//计算数组元素个数
//
//		int b = 0;
//			int c = ~b;
//			//    ~    按位取反
//			//000000000000000000000000000000
//			//111111111111111111111111111111
//			//源码，反码，补码 源码变反码按位取反（第一位符号位不变），反码加一得补码
//			//负数
//			printf("%d\n", c);//使用的，打印的是源码
//			int d = 10;
//			int e = d++; //后置++,先赋值给e，再++
//			printf("d=%d e=%d\n ", d, e);
//			int f = ++d;
//			printf("d=%d f=%d\n ", d, f);//前置
//
//			int h= 3.14;   //warning
//			int g = (int)3.14; //强制类型转换
//			printf("h=%d g=%d\n ", h, g);
//
//			//!=用于判断不相等
//			//0表示假，非0表示真
//			// && 逻辑与（且）
//			// ||逻辑或
//			
//			int i = 2;
//			int j = 3;
//			int k = i && j;
//			printf("%d\n", k);
//			int max = 0;
//			max = (i > j ? i :j);
//			printf("%d\n", max);
//
//			int arr2[10] = { 0 };
//			
//			printf("%d\n",arr2[4] );//arr[4] //[]下标操作符
//			//()函数调用操作符
//			//
//
//	return 0;
//}

//15.关键字

//声明外部函数
//extern int add(int, int);
//
//void test()
//{
//	int c = 1;
//	c++;
//	printf("c========%d\n", c);
//	
//	static int b = 1;
//	b++;
//	printf("b========%d\n", b);
//	
//}
//
//
//
//int main()
//
//{
//	int a = 10;//auto 自动变量 
//	//break case char const continue default do double else enum exturn float for goto if long int register return short sizeof static struct switch typedef
//	// union void volatile while
//	//register int a=10 建议把a定义成寄存器变量
//	//signed int ,unsigned int(无符号数）
//	//typedef 类型定义 e：
//	
//	typedef unsigned int u_int;
//		u_int b = 10;
//		int i = 0;
//		while (i < 5)
//		{test();
//		printf("i=%d\n", i);
//		i++; 
//		printf("i=%d\n", i);
//}
//
//
//		extern int yy;
//		printf("yy=%d\n", yy);
//		//static 修饰局部变量 局部变量生命周期变长
//		//static 修饰全局变量 改变了该全局变量的作用域，只能在源文件内部使用
//		//static 修饰函数，使函数失去外部连接属性
//		int sum = add(yy, b);
//		printf("sum=%d\n", sum);
//
//	return  0;
//}
//
//16.定义常量和宏

	//以下函数方式
//#define kk 100
//
//int MAX(int a, int b)
//{
//	if (a > b)
//		return a;
//	else
//		return b;
//
//}
//
////以下宏的方式
//#define max2(x,y) (x>y?x:y)
//
//
//int main()
//
//
//{
//	int a = kk;
//	int b = 10;
//	printf("a=%d\n", a);
//
//    int mmax = MAX(a, b);
//	printf("max1=%d\n", mmax);
//
//	int max3 = max2(a, b);
//	printf("max2=%d\n", max3);
//	return 0;
//}


//17.指针
//int main() {
//	int a = 10;
//	printf("%p\n", &a);
//	int* p = &a;    //指针变量
//	printf("%p\n", p);
//	*p = 20;  //通过地址找到的a改成20
//
//		printf("%d\n", a);
//		
//
//		char ch = 'w';
//		char* y = &ch;
//		*y = 'a';
//			printf("%c\n", ch);
//	return 0;
//}

//int main() {
//	int a = 10;
//	printf("%p\n", &a);
//	int* p = &a;
//	printf("%p\n", p);
//	double d = 3.14;
//	double* pd = &d;
//	*pd = 8.2;
//	printf("%lf\n", d);
//	printf("%d\n", sizeof(pd));
//
//	return 0;
//}

//18.结构体
//struct book { char name[20];
//short price;
//};
//
//int main() {
//
//	struct book b1 = { "c语言程序设计",55 };
//	printf(":%s\n", b1.name);
//	printf(":%d\n", b1.price);
//	b1.price = 15;
//	printf(":%d\n", b1.price);
//	struct book*pb = &b1;
//	printf("%d\n", (*pb).price);  //结构体变量.成员
//	printf("%d\n", pb->price);//结构体指针->成员
//	return 0;
//} 

//18.分支和循环语句
// 
// 
//int main() {
//	int age = 0;
//	scanf("%d", &age);
//
//	if (age < 18)
//	{
//		printf("未成年\n");
//		printf("不能谈恋爱\n");
//	}
//	else if (age < 28 && age>17)  
//		printf("青年\n");
//	else if (age > 27 && age < 50)
//		printf("壮年\n");
//	else {             //可加大括号实现一句以上的代码块
//		if (age > 49 && age < 90)
//			printf("老年\n");
//		else
//			printf("good\n");
//	}
//
//
//	return 0;
//}


//else和离他最近的if匹配，e：

//以下结果为空
//int main()
//{
//	int a = 0;
//	int b = 2;
//	if (a == 1)
//		if (b == 2)
//			printf("hehe\n");
//	else
//			printf("haha\n");
//
//
//	return 0;
//}

//以下结果为haha
//int main()
//{
//	int a = 0;
//	int b = 2;
//	if (a == 1)
//	{
//		if (b == 2)
//			printf("hehe\n");
//	}
//		else
//			printf("haha\n");
//
//
//	return 0;
//}

//帮助报错判断
//int main()
//{
//	int a = 1;
//if(1==a)   //如果不小心写成1=a会报错
//{
//	printf("hehe\n");
//}
//
//return 0;
//}


//int main()
//{
//	int a = 0;
//	printf("请输入一个数字：");
//	scanf("%d", &a);
//	if (1 == a % 2)
//	{
//		printf("奇数\n");
//	}
//	else
//		printf("偶数\n");
//	
//	
//	int i = 1;
//	while(i<101)
//	{
//		if (1 == i % 2)
//		{
//			printf(" %d", i);
//			i++;
//		}
//		else
//			i++;
//	}
//
//	int b = 1;
//	while (b <= 100) {
//		printf(" %d", b);
//		b += 2;
//	}
//	
//	return 0;
//
//}

//int main()
//{
//	int day = 0;
//	scanf("%d", &day);
//	switch(day)
//	{
//	case 1:
//		printf("星期%d", day);
//		break;
//	case 2:
//		printf("星期%d", day);
//		break;
//	case 3:
//		printf("星期%d", day);
//		break;                         //跳出switch
//	case 4:
//		printf("星期%d", day);
//		break;
//	case 5:
//		printf("星期%d", day);
//		break;
//	case 6:
//		printf("星期%d", day);
//		break;
//	case 7:
//		printf("星期%d", day);
//		break;
//	}
//	int q = 0;
//	scanf("%d", &q);
//	switch (q)
//	{
//	case 1:
//
//	case 2:
//	case 3:
//		                  
//	case 4:
//	case 5:
//		printf("工作日");
//		break;
//	case 6:
//
//		
//	case 7:
//		printf("休息日");
//		break;
//	default:
//		printf("输入错误\n");
//	}
//	return 0;
//}

//int main()
//{
//	if (1)
//		printf("hehe\n");
//	int i = 1;
//	while (i < 11)
//	{
//		printf(" %d", i);
//		i++;
//
//		if (2 == i)
//			continue;     //continue本次循环后续语句不执行
//
//		if (8 == i)
//			break;       //跳出循环
//	}
//
//	return 0;
//}

//int main()
//{
//	int ch = getchar();
//	putchar(ch);
//	printf("%c\n", ch);
//	while((ch=getchar())!=EOF
//		)
//	{
//		
//		putchar(ch);
//	}
//
//	return 0;
//}
//19.循环2
//int main()
//{
//	int ch = 0;
//	int ret = 0;
//	char password[20] = { 0 };
//	printf("输入密码：");
//	scanf("%s", password);
//	while((ch=getchar())!='\n')
//	{
//		;
//	}
//	
//	printf("请确认（y/n）：");
//	ret = getchar();
//	if(ret=='y')
//	{
//		printf("确认成功\n");
//		
//	}
//	else
//	{
//		printf("放弃确认\n");
//	}
//
//	return 0;
//}


//int main()
//{
//	int ch = 0;
//	while ((ch = getchar()) != EOF) {
//		if (ch < '0' || ch>'9')
//			continue;
//		putchar(ch);
//	}
//
//	return 0;
//}

//20.for循环
//int main()
//{
//	/*int i = 0;
//	while(i<10)
//	{
//		i++;
//	}*/
//	
//	for (int i = 1; i < 11; i++) {
//		if (5 == i)
//			continue;
//		for (int j = 0; j < 11; j += 2) {
//			printf("%d",j);
//		}
//		
//		printf("%d ", i);
//	}
//	int i = 0;
//	int j = 0;
//	for (; i < 10; i++)
//	{
//		for (; j < 10; j++) { printf("\nhehe\n"); }
//
//
//	}
//	//for (int k=1;k=0;k++)循环0次 正确为k==0 若为非0则死循环
//	return 0;
//}

//21.do while循环
//int main()
//{
//	int i = 1;
//	do
//	{
//		/*if (5 == i)
//			continue;*/
//		printf("%d\n",i);
//		i++;
//		
//	} while (i < 11);
//
//
//	return 0;
//}
